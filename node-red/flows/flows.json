[
    {
        "id": "98179551dc2e0332",
        "type": "tab",
        "label": "Dashboard +Água",
        "disabled": false,
        "info": "Sistema de monitoramento de captação de água da chuva",
        "env": []
    },
    {
        "id": "98c659fa058903f3",
        "type": "mqtt-broker",
        "name": "+AguaMQTT",
        "broker": "broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "2d490c0321b5ca01",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "main_dashboard_tab",
        "type": "ui_tab",
        "name": "Sistema +Água",
        "icon": "fa-tint",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "sensors_group",
        "type": "ui_group",
        "name": "Sensores Principais",
        "tab": "main_dashboard_tab",
        "order": 1,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "info_group",
        "type": "ui_group",
        "name": "Informações do Sistema",
        "tab": "main_dashboard_tab",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "charts_group",
        "type": "ui_group",
        "name": "Gráficos e Histórico",
        "tab": "main_dashboard_tab",
        "order": 3,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "35da13e28cafc3b0",
        "type": "ui_group",
        "name": "Controle do Sistema",
        "tab": "main_dashboard_tab",
        "order": 4,
        "disp": true,
        "width": 12,
        "collapse": false,
        "className": ""
    },
    {
        "id": "c1c994b464c49ae7",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false,
        "alpnprotocol": ""
    },
    {
        "id": "a3f192b3e80a3144",
        "type": "mqtt in",
        "z": "98179551dc2e0332",
        "name": "Dados Sensor MQTT",
        "topic": "LEITURA_RESERVATORIO",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "98c659fa058903f3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 200,
        "wires": [
            [
                "3a62d5b04360f2b9"
            ]
        ]
    },
    {
        "id": "3a62d5b04360f2b9",
        "type": "json",
        "z": "98179551dc2e0332",
        "name": "Converte JSON",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 340,
        "y": 200,
        "wires": [
            [
                "d97855c24b4ff182",
                "0259ee18bd248b65"
            ]
        ]
    },
    {
        "id": "d97855c24b4ff182",
        "type": "function",
        "z": "98179551dc2e0332",
        "name": "Sistema com Regras Simplificadas",
        "func": "// Validação básica\nif (!msg.payload) {\n    return null;\n}\n\nvar data = msg.payload;\nvar agora = new Date();\n\n// ═══════════════════════════════════════════════════════════\n//                    DADOS DISPONÍVEIS (REAIS)\n// ═══════════════════════════════════════════════════════════\nvar nivel = Math.max(0, Math.min(100, parseFloat(data.LevelPct) || 0));\nvar ph = Math.max(0, Math.min(14, parseFloat(data.PhLevel) || 7));\nvar turbidez = Math.max(0, Math.min(50, parseFloat(data.TurbidityNtu) || 0));\n\n// Configurações básicas\nvar capacidade = 5000; // Litros\nvar consumoDiario = 180; // Litros/dia\nvar volumeAtual = Math.round((nivel / 100) * capacidade);\nvar autonomia = Math.floor(volumeAtual / consumoDiario);\nvar eficiencia = ((volumeAtual / capacidade) * 100).toFixed(1);\n\n// ═══════════════════════════════════════════════════════════\n//                    CONTEXTO SIMPLIFICADO\n// ═══════════════════════════════════════════════════════════\nvar contexto = {\n    sistemaAtivo: context.get('sistemaAtivo') !== false,\n    ultimaLimpeza: new Date(context.get('ultimaLimpeza') || agora.getTime() - (35 * 24 * 60 * 60 * 1000)),\n    contadorAlertas: context.get('contadorAlertas') || 0,\n    ultimoAlertaCritico: context.get('ultimoAlertaCritico') || null\n};\n\n// ═══════════════════════════════════════════════════════════\n//                    REGRAS SIMPLIFICADAS\n// ═══════════════════════════════════════════════════════════\n\nvar alertas = [];\nvar avisos = [];\nvar acoesSugeridas = [];\nvar status = \"Normal\";\nvar qualidadeGeral = 100;\nvar sistemaAtivo = true;\n\n// ───────────────────────────────────────────────────────────\n//                    REGRA 1: NÍVEL CRÍTICO\n// ───────────────────────────────────────────────────────────\nif (nivel <= 5) {\n    status = \"CRÍTICO\";\n    sistemaAtivo = false;\n    alertas.push(\"🚨 NÍVEL CRÍTICO: \" + nivel + \"% - Reservatório quase vazio\");\n    acoesSugeridas.push(\"• Verificar vazamentos urgentemente\");\n    acoesSugeridas.push(\"• Suspender uso não essencial\");\n    acoesSugeridas.push(\"• Buscar fonte alternativa de água\");\n    qualidadeGeral = 0;\n    \n    context.set('ultimoAlertaCritico', agora.getTime());\n    contexto.contadorAlertas++;\n} else if (nivel <= 15) {\n    if (status === \"Normal\") status = \"ALERTA\";\n    alertas.push(\"⚠️ NÍVEL BAIXO: \" + nivel + \"% - Pouca água disponível\");\n    acoesSugeridas.push(\"• Reduzir consumo não essencial\");\n    acoesSugeridas.push(\"• Monitorar consumo diário\");\n    acoesSugeridas.push(\"• Verificar previsão de chuva\");\n    qualidadeGeral -= 30;\n} else if (nivel <= 30) {\n    avisos.push(\"📉 NÍVEL MODERADO: \" + nivel + \"% - Atenção ao consumo\");\n    acoesSugeridas.push(\"• Monitorar consumo\");\n    acoesSugeridas.push(\"• Planejar economia se necessário\");\n    qualidadeGeral -= 10;\n} else if (nivel >= 95) {\n    avisos.push(\"📈 NÍVEL MÁXIMO: \" + nivel + \"% - Reservatório cheio\");\n    acoesSugeridas.push(\"• Aproveitar para usos intensivos\");\n    acoesSugeridas.push(\"• Verificar extravasor\");\n}\n\n// ───────────────────────────────────────────────────────────\n//                    REGRA 2: QUALIDADE DA ÁGUA (pH)\n// ───────────────────────────────────────────────────────────\nif (ph < 6.0) {\n    status = \"CRÍTICO\";\n    sistemaAtivo = false;\n    alertas.push(\"🧪 pH CRÍTICO: \" + ph + \" - Água muito ácida, imprópria para uso\");\n    acoesSugeridas.push(\"• NÃO USAR a água até normalização\");\n    acoesSugeridas.push(\"• Verificar contaminação do sistema\");\n    acoesSugeridas.push(\"• Limpar telhado e calhas\");\n    acoesSugeridas.push(\"• Considerar descarte da água atual\");\n    qualidadeGeral = 0;\n    \n    context.set('ultimoAlertaCritico', agora.getTime());\n    contexto.contadorAlertas++;\n} else if (ph > 8.5) {\n    status = \"CRÍTICO\";\n    sistemaAtivo = false;\n    alertas.push(\"🧪 pH CRÍTICO: \" + ph + \" - Água muito alcalina, imprópria para uso\");\n    acoesSugeridas.push(\"• NÃO USAR a água até normalização\");\n    acoesSugeridas.push(\"• Verificar materiais do sistema\");\n    acoesSugeridas.push(\"• Testar fonte de contaminação\");\n    qualidadeGeral = 0;\n    \n    context.set('ultimoAlertaCritico', agora.getTime());\n    contexto.contadorAlertas++;\n} else if (ph < 6.5 || ph > 8.0) {\n    if (status === \"Normal\") status = \"ALERTA\";\n    avisos.push(\"🧪 pH FORA DO IDEAL: \" + ph + \" - Monitorar de perto\");\n    acoesSugeridas.push(\"• Usar apenas para fins não potáveis\");\n    acoesSugeridas.push(\"• Aumentar frequência de testes\");\n    acoesSugeridas.push(\"• Verificar sistema de filtragem\");\n    qualidadeGeral -= 25;\n} else {\n    avisos.push(\"✅ pH IDEAL: \" + ph + \" - Dentro da faixa segura (6.5-8.0)\");\n}\n\n// ───────────────────────────────────────────────────────────\n//                    REGRA 3: TURBIDEZ DA ÁGUA\n// ───────────────────────────────────────────────────────────\nif (turbidez > 10) {\n    status = \"CRÍTICO\";\n    sistemaAtivo = false;\n    alertas.push(\"🌫️ TURBIDEZ CRÍTICA: \" + turbidez + \" NTU - Água muito suja\");\n    acoesSugeridas.push(\"• NÃO USAR a água até limpeza\");\n    acoesSugeridas.push(\"• Limpar reservatório completamente\");\n    acoesSugeridas.push(\"• Verificar entrada de detritos\");\n    acoesSugeridas.push(\"• Manutenção urgente dos filtros\");\n    qualidadeGeral = 0;\n    \n    context.set('ultimoAlertaCritico', agora.getTime());\n    contexto.contadorAlertas++;\n} else if (turbidez > 5) {\n    if (status === \"Normal\") status = \"ALERTA\";\n    alertas.push(\"🌫️ TURBIDEZ ALTA: \" + turbidez + \" NTU - Água turva\");\n    acoesSugeridas.push(\"• Usar apenas para fins gerais (não beber)\");\n    acoesSugeridas.push(\"• Limpar filtros primários\");\n    acoesSugeridas.push(\"• Verificar sistema de sedimentação\");\n    acoesSugeridas.push(\"• Agendar limpeza do reservatório\");\n    qualidadeGeral -= 40;\n} else if (turbidez > 2) {\n    avisos.push(\"🌫️ TURBIDEZ MODERADA: \" + turbidez + \" NTU - Ligeiramente turva\");\n    acoesSugeridas.push(\"• Monitorar evolução da turbidez\");\n    acoesSugeridas.push(\"• Verificar filtros\");\n    qualidadeGeral -= 15;\n} else {\n    avisos.push(\"✅ ÁGUA CLARA: \" + turbidez + \" NTU - Boa transparência\");\n}\n\n// ───────────────────────────────────────────────────────────\n//                    REGRA 4: AUTONOMIA DO SISTEMA\n// ───────────────────────────────────────────────────────────\nif (autonomia <= 1) {\n    if (status === \"Normal\") status = \"CRÍTICO\";\n    alertas.push(\"⏰ AUTONOMIA CRÍTICA: Apenas \" + autonomia + \" dia(s) restantes\");\n    acoesSugeridas.push(\"• Redução DRÁSTICA do consumo\");\n    acoesSugeridas.push(\"• Buscar fonte alternativa URGENTE\");\n    acoesSugeridas.push(\"• Usar apenas para necessidades básicas\");\n} else if (autonomia <= 3) {\n    if (status === \"Normal\") status = \"ALERTA\";\n    alertas.push(\"⏰ AUTONOMIA BAIXA: \" + autonomia + \" dias restantes\");\n    acoesSugeridas.push(\"• Economizar água significativamente\");\n    acoesSugeridas.push(\"• Verificar previsão meteorológica\");\n    acoesSugeridas.push(\"• Preparar plano de contingência\");\n} else if (autonomia <= 7) {\n    avisos.push(\"⏰ AUTONOMIA LIMITADA: \" + autonomia + \" dias restantes\");\n    acoesSugeridas.push(\"• Monitorar consumo diário\");\n    acoesSugeridas.push(\"• Economizar quando possível\");\n} else {\n    avisos.push(\"✅ BOA AUTONOMIA: \" + autonomia + \" dias de reserva\");\n}\n\n// ───────────────────────────────────────────────────────────\n//                    REGRA 5: EFICIÊNCIA DO SISTEMA\n// ───────────────────────────────────────────────────────────\nif (eficiencia < 25) {\n    avisos.push(\"📉 EFICIÊNCIA BAIXA: \" + eficiencia + \"% de aproveitamento\");\n    acoesSugeridas.push(\"• Verificar vazamentos no sistema\");\n    acoesSugeridas.push(\"• Otimizar área de captação\");\n    acoesSugeridas.push(\"• Melhorar direcionamento das calhas\");\n} else if (eficiencia > 80) {\n    avisos.push(\"📈 EXCELENTE EFICIÊNCIA: \" + eficiencia + \"% de aproveitamento\");\n}\n\n// ───────────────────────────────────────────────────────────\n//                    REGRA 6: MANUTENÇÃO BÁSICA\n// ───────────────────────────────────────────────────────────\nvar diasSemLimpeza = Math.floor((agora - contexto.ultimaLimpeza) / (24 * 60 * 60 * 1000));\n\nif (diasSemLimpeza > 180) { // 6 meses\n    if (status === \"Normal\") status = \"MANUTENÇÃO\";\n    alertas.push(\"🔧 MANUTENÇÃO OBRIGATÓRIA: \" + diasSemLimpeza + \" dias sem limpeza\");\n    acoesSugeridas.push(\"• Limpeza completa do reservatório URGENTE\");\n    acoesSugeridas.push(\"• Inspeção completa do sistema\");\n    acoesSugeridas.push(\"• Troca de todos os filtros\");\n    qualidadeGeral -= 40;\n} else if (diasSemLimpeza > 90) { // 3 meses\n    avisos.push(\"🔧 MANUTENÇÃO RECOMENDADA: \" + diasSemLimpeza + \" dias sem limpeza\");\n    acoesSugeridas.push(\"• Agendar limpeza do reservatório\");\n    acoesSugeridas.push(\"• Verificar estado dos filtros\");\n    qualidadeGeral -= 15;\n}\n\n// Verificação mensal automática\nif (agora.getDate() === 1) {\n    avisos.push(\"📅 VERIFICAÇÃO MENSAL: Inspeção geral recomendada\");\n    acoesSugeridas.push(\"• Verificar estado das calhas\");\n    acoesSugeridas.push(\"• Limpar filtros e telas\");\n    acoesSugeridas.push(\"• Testar funcionamento geral\");\n    acoesSugeridas.push(\"• Verificar vedações\");\n}\n\n// Verificação semanal\nif (agora.getDay() === 0) {\n    avisos.push(\"🧹 VERIFICAÇÃO SEMANAL: Limpeza básica recomendada\");\n    acoesSugeridas.push(\"• Verificar entrada de detritos\");\n    acoesSugeridas.push(\"• Limpar telas de proteção\");\n}\n\n// ───────────────────────────────────────────────────────────\n//                    CÁLCULO FINAL\n// ───────────────────────────────────────────────────────────\nqualidadeGeral = Math.max(0, Math.min(100, qualidadeGeral));\n\n// Definir status final\nvar statusFinal = status;\nif (!sistemaAtivo && status === \"Normal\") {\n    statusFinal = \"BLOQUEADO\";\n}\n\n// Status detalhados\nvar statusDetalhados = {\n    nivel: nivel <= 5 ? \"Crítico\" : nivel <= 15 ? \"Baixo\" : nivel <= 75 ? \"Normal\" : \"Alto\",\n    qualidade: qualidadeGeral < 40 ? \"Ruim\" : qualidadeGeral < 70 ? \"Regular\" : qualidadeGeral < 90 ? \"Boa\" : \"Excelente\",\n    ph: ph < 6.0 || ph > 8.5 ? \"Crítico\" : ph < 6.5 || ph > 8.0 ? \"Fora do ideal\" : \"Ideal\",\n    turbidez: turbidez > 10 ? \"Crítica\" : turbidez > 5 ? \"Alta\" : turbidez > 2 ? \"Moderada\" : \"Baixa\",\n    sistema: sistemaAtivo ? \"Operacional\" : \"Bloqueado\"\n};\n\n// Resumo da qualidade\nvar resumoQualidade = \"\";\nif (qualidadeGeral >= 90) {\n    resumoQualidade = \"Excelente - Sistema funcionando perfeitamente\";\n} else if (qualidadeGeral >= 70) {\n    resumoQualidade = \"Boa - Sistema operacional com pequenos ajustes\";\n} else if (qualidadeGeral >= 40) {\n    resumoQualidade = \"Regular - Atenção necessária\";\n} else {\n    resumoQualidade = \"Ruim - Intervenção urgente necessária\";\n}\n\n// Salvar contexto\ncontext.set('sistemaAtivo', sistemaAtivo);\ncontext.set('contadorAlertas', contexto.contadorAlertas);\n\nvar timestamp = new Date().toLocaleString('pt-BR');\n\n// Log simplificado\nif (alertas.length > 0) {\n    node.warn(\"🚨 ALERTAS ATIVOS: \" + alertas.length + \" alertas críticos\");\n}\nif (avisos.length > 0) {\n    node.log(\"ℹ️ SISTEMA: \" + avisos.length + \" avisos informativos\");\n}\n\nreturn [\n    { payload: nivel, topic: \"nivel\" },\n    { payload: ph, topic: \"ph\" },\n    { payload: turbidez, topic: \"turbidez\" },\n    { payload: qualidadeGeral, topic: \"qualidade\" },\n    {\n        payload: {\n            device: data.Sensor || \"Sensor-001\",\n            timestamp: timestamp,\n            statusGeral: statusFinal,\n            sistemaAtivo: sistemaAtivo,\n            \n            // Dados básicos\n            capacidade: capacidade + \"L\",\n            volume: volumeAtual + \"L\",\n            consumo: consumoDiario + \"L/dia\",\n            autonomia: autonomia + \" dias\",\n            eficiencia: eficiencia + \"%\",\n            \n            // Status detalhados\n            statusNivel: statusDetalhados.nivel,\n            statusQualidade: statusDetalhados.qualidade,\n            statusPh: statusDetalhados.ph,\n            statusTurbidez: statusDetalhados.turbidez,\n            statusSistema: statusDetalhados.sistema,\n            \n            // Resumo e valores atuais\n            resumoQualidade: resumoQualidade,\n            valoresAtuais: {\n                nivel: nivel + \"%\",\n                ph: ph,\n                turbidez: turbidez + \" NTU\",\n                qualidade: qualidadeGeral + \"%\"\n            },\n            \n            // Informações de manutenção\n            diasSemLimpeza: diasSemLimpeza,\n            contadorAlertas: contexto.contadorAlertas\n        },\n        topic: \"info\"\n    },\n    { payload: nivel, topic: \"Nível\" },\n    { payload: ph, topic: \"pH\" },\n    { payload: turbidez, topic: \"Turbidez\" },\n    { payload: qualidadeGeral, topic: \"Qualidade\" },\n    {\n        payload: {\n            sistema: {\n                ativo: sistemaAtivo,\n                bomba: nivel > 10 && sistemaAtivo, // Simulado\n                valvula: sistemaAtivo, // Simulado\n                flush: false, // Simulado\n                pressao: 25, // Simulado\n                temperatura: 22, // Simulado\n                fluxo: sistemaAtivo ? 15 : 0 // Simulado\n            },\n            status: {\n                geral: statusFinal,\n                detalhados: statusDetalhados\n            },\n            alertas: alertas,\n            avisos: avisos,\n            acoes: acoesSugeridas,\n            comandos: [], // Vazio para versão simplificada\n            manutencao: {\n                horasBomba: Math.round(diasSemLimpeza * 0.5), // Estimado\n                ciclosValvula: Math.round(diasSemLimpeza * 2), // Estimado\n                diasSemLimpeza: diasSemLimpeza,\n                volumeDescartado: 0 // Para versão simplificada\n            },\n            timestamp: timestamp,\n            // Indicadores para dashboard\n            indicadores: {\n                nivelOK: nivel > 15,\n                phOK: ph >= 6.5 && ph <= 8.0,\n                turbidezOK: turbidez <= 5,\n                autonomiaOK: autonomia > 3,\n                sistemaOK: sistemaAtivo\n            },\n            // Contadores para estatísticas\n            contadores: {\n                totalAlertas: alertas.length,\n                totalAvisos: avisos.length,\n                totalAcoes: acoesSugeridas.length\n            }\n        },\n        topic: \"sistema_completo\"\n    }\n];",
        "outputs": 10,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 200,
        "wires": [
            [
                "3deb7360fbead7ae"
            ],
            [
                "1ef62bbcce0c8647"
            ],
            [
                "2ae1a5ecf7d8fe3c"
            ],
            [
                "a022e0bf255308ca"
            ],
            [
                "3e6832df92372d25"
            ],
            [
                "d503438960654b08"
            ],
            [
                "4003767af934964d"
            ],
            [
                "daedfa104ce1540b"
            ],
            [
                "654c37afeb986b31"
            ],
            [
                "ee327160b0f0af50"
            ]
        ]
    },
    {
        "id": "3deb7360fbead7ae",
        "type": "ui_gauge",
        "z": "98179551dc2e0332",
        "name": "Gauge Nível",
        "group": "sensors_group",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "wave",
        "title": "Nível do Reservatório",
        "label": "%",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": [
            "#e74c3c",
            "#f39c12",
            "#27ae60"
        ],
        "seg1": 20,
        "seg2": 70,
        "diff": false,
        "className": "",
        "x": 990,
        "y": 100,
        "wires": []
    },
    {
        "id": "1ef62bbcce0c8647",
        "type": "ui_gauge",
        "z": "98179551dc2e0332",
        "name": "Gauge pH",
        "group": "sensors_group",
        "order": 2,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "pH da Água",
        "label": "pH",
        "format": "{{value}}",
        "min": 0,
        "max": 14,
        "colors": [
            "#e74c3c",
            "#27ae60",
            "#e74c3c"
        ],
        "seg1": "5",
        "seg2": "9",
        "diff": true,
        "className": "",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "2ae1a5ecf7d8fe3c",
        "type": "ui_gauge",
        "z": "98179551dc2e0332",
        "name": "Gauge Turbidez",
        "group": "sensors_group",
        "order": 3,
        "width": 3,
        "height": 3,
        "gtype": "gage",
        "title": "Turbidez",
        "label": "NTU",
        "format": "{{value}}",
        "min": 0,
        "max": "30",
        "colors": [
            "#27ae60",
            "#f39c12",
            "#e74c3c"
        ],
        "seg1": "10",
        "seg2": "20",
        "diff": false,
        "className": "",
        "x": 1000,
        "y": 180,
        "wires": []
    },
    {
        "id": "a022e0bf255308ca",
        "type": "ui_gauge",
        "z": "98179551dc2e0332",
        "name": "Gauge Qualidade",
        "group": "sensors_group",
        "order": 4,
        "width": 3,
        "height": 3,
        "gtype": "donut",
        "title": "Qualidade Geral",
        "label": "pontos",
        "format": "{{value}}",
        "min": 0,
        "max": 100,
        "colors": [
            "#e74c3c",
            "#f39c12",
            "#27ae60"
        ],
        "seg1": 40,
        "seg2": 80,
        "diff": false,
        "className": "",
        "x": 1010,
        "y": 220,
        "wires": []
    },
    {
        "id": "3e6832df92372d25",
        "type": "ui_template",
        "z": "98179551dc2e0332",
        "group": "info_group",
        "name": "System Information",
        "order": 1,
        "width": 6,
        "height": 8,
        "format": "<div class=\"system-info\">\n    <div class=\"info-header\">\n        <h3>Status do Sistema</h3>\n        <span class=\"timestamp\">{{msg.payload.timestamp}}</span>\n    </div>\n    \n    <div class=\"info-grid\">\n        <div class=\"info-section\">\n            <h4>Dispositivo</h4>\n            <div class=\"info-item\">\n                <span class=\"label\">ID:</span>\n                <span class=\"value\">{{msg.payload.device}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Temperatura:</span>\n                <span class=\"value\">{{msg.payload.temperatura}}</span>\n            </div>\n        </div>\n        \n        <div class=\"info-section\">\n            <h4>Capacidade</h4>\n            <div class=\"info-item\">\n                <span class=\"label\">Total:</span>\n                <span class=\"value\">{{msg.payload.capacidade}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Atual:</span>\n                <span class=\"value highlight\">{{msg.payload.volume}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Eficiência:</span>\n                <span class=\"value\">{{msg.payload.eficiencia}}</span>\n            </div>\n        </div>\n        \n        <div class=\"info-section\">\n            <h4>Sistema de Pressão</h4>\n            <div class=\"info-item\">\n                <span class=\"label\">Pressão:</span>\n                <span class=\"value highlight\">{{msg.payload.pressao}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Fluxo Entrada:</span>\n                <span class=\"value\">{{msg.payload.fluxoEntrada}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Descartado:</span>\n                <span class=\"value\">{{msg.payload.volumeDescartado}}</span>\n            </div>\n        </div>\n        \n        <div class=\"info-section\">\n            <h4>Consumo e Autonomia</h4>\n            <div class=\"info-item\">\n                <span class=\"label\">Diário:</span>\n                <span class=\"value\">{{msg.payload.consumo}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Autonomia:</span>\n                <span class=\"value highlight\">{{msg.payload.autonomia}}</span>\n            </div>\n        </div>\n        \n        <div class=\"info-section\">\n            <h4>Status de Qualidade</h4>\n            <div class=\"info-item\">\n                <span class=\"label\">Nível:</span>\n                <span class=\"status-badge status-{{msg.payload.statusNivel.toLowerCase()}}\">{{msg.payload.statusNivel}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Qualidade:</span>\n                <span class=\"status-badge status-{{msg.payload.statusQualidade.toLowerCase()}}\">{{msg.payload.statusQualidade}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">pH:</span>\n                <span class=\"status-badge\">{{msg.payload.statusPh}}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Turbidez:</span>\n                <span class=\"status-badge\">{{msg.payload.statusTurbidez}}</span>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n.system-info {\n    font-family: 'Segoe UI', Roboto, sans-serif;\n    background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);\n    border-radius: 12px;\n    padding: 20px;\n    margin: 10px;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n    border: 1px solid #e9ecef;\n}\n\n.info-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    padding-bottom: 15px;\n    border-bottom: 2px solid #007bff;\n}\n\n.info-header h3 {\n    margin: 0;\n    color: #007bff;\n    font-size: 18px;\n    font-weight: 600;\n}\n\n.timestamp {\n    font-size: 12px;\n    color: #6c757d;\n    background: #f8f9fa;\n    padding: 4px 8px;\n    border-radius: 4px;\n}\n\n.info-grid {\n    display: grid;\n    gap: 20px;\n}\n\n.info-section {\n    background: white;\n    border-radius: 8px;\n    padding: 15px;\n    border: 1px solid #e9ecef;\n}\n\n.info-section h4 {\n    margin: 0 0 12px 0;\n    color: #495057;\n    font-size: 14px;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n}\n\n.info-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 0;\n    border-bottom: 1px solid #f1f3f4;\n}\n\n.info-item:last-child {\n    border-bottom: none;\n}\n\n.label {\n    font-size: 13px;\n    color: #6c757d;\n    font-weight: 500;\n}\n\n.value {\n    font-size: 13px;\n    color: #212529;\n    font-weight: 600;\n}\n\n.value.highlight {\n    color: #007bff;\n    font-weight: 700;\n}\n\n.status-badge {\n    font-size: 11px;\n    padding: 4px 8px;\n    border-radius: 12px;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.3px;\n}\n\n.status-crítico { background: #fee; color: #dc3545; }\n.status-baixo { background: #fff3cd; color: #856404; }\n.status-normal { background: #d1ecf1; color: #0c5460; }\n.status-alto { background: #d4edda; color: #155724; }\n.status-ruim { background: #fee; color: #dc3545; }\n.status-regular { background: #fff3cd; color: #856404; }\n.status-boa { background: #d1ecf1; color: #0c5460; }\n.status-excelente { background: #d4edda; color: #155724; }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1020,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "d503438960654b08",
        "type": "ui_chart",
        "z": "98179551dc2e0332",
        "name": "Chart Nível",
        "group": "charts_group",
        "order": 1,
        "width": 6,
        "height": 4,
        "label": "Histórico do Nível (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Aguardando dados do nível...",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 15,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#007bff",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1020,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "4003767af934964d",
        "type": "ui_chart",
        "z": "98179551dc2e0332",
        "name": "Chart pH",
        "group": "charts_group",
        "order": 2,
        "width": 6,
        "height": 4,
        "label": "Histórico do pH",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Aguardando dados do pH...",
        "dot": true,
        "ymin": "0",
        "ymax": "14",
        "removeOlder": 15,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#28a745"
        ],
        "outputs": 1,
        "x": 1020,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "daedfa104ce1540b",
        "type": "ui_chart",
        "z": "98179551dc2e0332",
        "name": "Chart Turbidez",
        "group": "charts_group",
        "order": 3,
        "width": 6,
        "height": 4,
        "label": "Histórico da Turbidez (NTU)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Aguardando dados da turbidez...",
        "dot": true,
        "ymin": "0",
        "ymax": "20",
        "removeOlder": 15,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ffc107"
        ],
        "outputs": 1,
        "x": 1030,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "654c37afeb986b31",
        "type": "ui_chart",
        "z": "98179551dc2e0332",
        "name": "Chart Qualidade",
        "group": "charts_group",
        "order": 4,
        "width": 6,
        "height": 4,
        "label": "Histórico da Qualidade (%)",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "Aguardando dados da qualidade...",
        "dot": true,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 15,
        "removeOlderPoints": "",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#dc3545"
        ],
        "outputs": 1,
        "x": 1030,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ee327160b0f0af50",
        "type": "ui_template",
        "z": "98179551dc2e0332",
        "group": "35da13e28cafc3b0",
        "name": "Painel de Controle do Sistema",
        "order": 1,
        "width": 12,
        "height": 8,
        "format": "<div class=\"sistema-container\">\n    <div class=\"sistema-header status-{{msg.payload.status.geral.toLowerCase()}}\">\n        <h3>🔧 SISTEMA DE CAPTAÇÃO</h3>\n        <div class=\"status-principal\">{{msg.payload.status.geral}}</div>\n    </div>\n    \n    <!-- STATUS DOS COMPONENTES -->\n    <div class=\"componentes-grid\">\n        <div class=\"componente-card {{msg.payload.sistema.ativo ? 'ativo' : 'inativo'}}\">\n            <div class=\"componente-icon\">🏠</div>\n            <div class=\"componente-info\">\n                <h4>SISTEMA PRINCIPAL</h4>\n                <span class=\"status\">{{msg.payload.sistema.ativo ? 'ATIVO' : 'BLOQUEADO'}}</span>\n            </div>\n        </div>\n        \n        <div class=\"componente-card {{msg.payload.sistema.bomba ? 'ativo' : 'inativo'}}\">\n            <div class=\"componente-icon\">⚡</div>\n            <div class=\"componente-info\">\n                <h4>BOMBA</h4>\n                <span class=\"status\">{{msg.payload.sistema.bomba ? 'LIGADA' : 'DESLIGADA'}}</span>\n                <div class=\"sub-info\">{{msg.payload.sistema.pressao}} PSI</div>\n            </div>\n        </div>\n        \n        <div class=\"componente-card {{msg.payload.sistema.valvula ? 'ativo' : 'inativo'}}\">\n            <div class=\"componente-icon\">🚰</div>\n            <div class=\"componente-info\">\n                <h4>VÁLVULA PRINCIPAL</h4>\n                <span class=\"status\">{{msg.payload.sistema.valvula ? 'ABERTA' : 'FECHADA'}}</span>\n                <div class=\"sub-info\">{{msg.payload.sistema.fluxo}} L/min</div>\n            </div>\n        </div>\n        \n        <div class=\"componente-card {{msg.payload.sistema.flush ? 'ativo' : 'inativo'}}\">\n            <div class=\"componente-icon\">🌊</div>\n            <div class=\"componente-info\">\n                <h4>FIRST FLUSH</h4>\n                <span class=\"status\">{{msg.payload.sistema.flush ? 'ATIVO' : 'INATIVO'}}</span>\n                <div class=\"sub-info\">{{msg.payload.sistema.temperatura}}°C</div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- ALERTAS E AVISOS -->\n    <div class=\"alertas-container\">\n        <div ng-if=\"msg.payload.alertas.length > 0\" class=\"alertas-secao\">\n            <h4>🚨 ALERTAS CRÍTICOS</h4>\n            <div class=\"alertas-lista\">\n                <div ng-repeat=\"alerta in msg.payload.alertas\" class=\"alerta-item critico\">\n                    {{alerta}}\n                </div>\n            </div>\n        </div>\n        \n        <div ng-if=\"msg.payload.avisos.length > 0\" class=\"alertas-secao\">\n            <h4>ℹ️ AVISOS DO SISTEMA</h4>\n            <div class=\"alertas-lista\">\n                <div ng-repeat=\"aviso in msg.payload.avisos\" class=\"alerta-item aviso\">\n                    {{aviso}}\n                </div>\n            </div>\n        </div>\n        \n        <div ng-if=\"msg.payload.acoes.length > 0\" class=\"alertas-secao\">\n            <h4>🔧 AÇÕES RECOMENDADAS</h4>\n            <div class=\"acoes-lista\">\n                <div ng-repeat=\"acao in msg.payload.acoes\" class=\"acao-item\">\n                    {{acao}}\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    <!-- INFORMAÇÕES DE MANUTENÇÃO -->\n    <div class=\"manutencao-info\">\n        <h4>📊 INFORMAÇÕES DE MANUTENÇÃO</h4>\n        <div class=\"manutencao-grid\">\n            <div class=\"manutencao-item\">\n                <span class=\"label\">Horas de Bomba:</span>\n                <span class=\"value\">{{msg.payload.manutencao.horasBomba}}h</span>\n            </div>\n            <div class=\"manutencao-item\">\n                <span class=\"label\">Ciclos de Válvula:</span>\n                <span class=\"value\">{{msg.payload.manutencao.ciclosValvula}}</span>\n            </div>\n            <div class=\"manutencao-item\">\n                <span class=\"label\">Dias sem Limpeza:</span>\n                <span class=\"value\">{{msg.payload.manutencao.diasSemLimpeza}}</span>\n            </div>\n            <div class=\"manutencao-item\">\n                <span class=\"label\">Volume Descartado:</span>\n                <span class=\"value\">{{msg.payload.manutencao.volumeDescartado}}L</span>\n            </div>\n        </div>\n    </div>\n    \n    <div class=\"timestamp\">Última atualização: {{msg.payload.timestamp}}</div>\n</div>\n\n<style>\n.sistema-container {\n    font-family: 'Segoe UI', Roboto, sans-serif;\n    background: #ffffff;\n    border-radius: 12px;\n    padding: 20px;\n    margin: 10px;\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\n    border: 1px solid #e9ecef;\n}\n\n.sistema-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n    padding: 15px;\n    border-radius: 8px;\n    color: white;\n}\n\n.sistema-header.status-normal { background: linear-gradient(135deg, #28a745, #20c997); }\n.sistema-header.status-alerta { background: linear-gradient(135deg, #ffc107, #fd7e14); }\n.sistema-header.status-crítico { background: linear-gradient(135deg, #dc3545, #e83e8c); }\n.sistema-header.status-first_flush { background: linear-gradient(135deg, #007bff, #6610f2); }\n\n.sistema-header h3 {\n    margin: 0;\n    font-size: 18px;\n    font-weight: 600;\n}\n\n.status-principal {\n    background: rgba(255,255,255,0.2);\n    padding: 8px 16px;\n    border-radius: 20px;\n    font-weight: 700;\n    font-size: 14px;\n    backdrop-filter: blur(10px);\n}\n\n.componentes-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    gap: 15px;\n    margin-bottom: 20px;\n}\n\n.componente-card {\n    display: flex;\n    align-items: center;\n    padding: 15px;\n    border-radius: 8px;\n    border: 2px solid #e9ecef;\n    transition: all 0.3s ease;\n}\n\n.componente-card.ativo {\n    background: linear-gradient(135deg, #d4edda, #c3e6cb);\n    border-color: #28a745;\n    box-shadow: 0 2px 8px rgba(40, 167, 69, 0.2);\n}\n\n.componente-card.inativo {\n    background: linear-gradient(135deg, #f8d7da, #f5c6cb);\n    border-color: #dc3545;\n    box-shadow: 0 2px 8px rgba(220, 53, 69, 0.2);\n}\n\n.componente-icon {\n    font-size: 24px;\n    margin-right: 12px;\n    opacity: 0.8;\n}\n\n.componente-info h4 {\n    margin: 0 0 4px 0;\n    font-size: 12px;\n    font-weight: 600;\n    color: #495057;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n}\n\n.componente-info .status {\n    font-size: 14px;\n    font-weight: 700;\n    color: #212529;\n}\n\n.componente-info .sub-info {\n    font-size: 11px;\n    color: #6c757d;\n    margin-top: 2px;\n}\n\n.alertas-container {\n    margin-bottom: 20px;\n}\n\n.alertas-secao {\n    margin-bottom: 15px;\n}\n\n.alertas-secao h4 {\n    margin: 0 0 8px 0;\n    font-size: 13px;\n    font-weight: 600;\n    color: #495057;\n    text-transform: uppercase;\n}\n\n.alertas-lista, .acoes-lista {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n}\n\n.alerta-item {\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 12px;\n    line-height: 1.4;\n    font-weight: 500;\n}\n\n.alerta-item.critico {\n    background: #fff5f5;\n    color: #c53030;\n    border-left: 4px solid #e53e3e;\n}\n\n.alerta-item.aviso {\n    background: #fffbeb;\n    color: #d69e2e;\n    border-left: 4px solid #f6ad55;\n}\n\n.acao-item {\n    padding: 6px 12px;\n    background: #f7fafc;\n    border-radius: 6px;\n    font-size: 12px;\n    color: #2d3748;\n    border-left: 3px solid #4299e1;\n}\n\n.manutencao-info {\n    background: #f8f9fa;\n    border-radius: 8px;\n    padding: 15px;\n    margin-bottom: 15px;\n}\n\n.manutencao-info h4 {\n    margin: 0 0 12px 0;\n    font-size: 13px;\n    font-weight: 600;\n    color: #495057;\n    text-transform: uppercase;\n}\n\n.manutencao-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    gap: 10px;\n}\n\n.manutencao-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 8px 12px;\n    background: white;\n    border-radius: 6px;\n    border: 1px solid #e9ecef;\n}\n\n.manutencao-item .label {\n    font-size: 12px;\n    color: #6c757d;\n    font-weight: 500;\n}\n\n.manutencao-item .value {\n    font-size: 12px;\n    color: #212529;\n    font-weight: 700;\n}\n\n.timestamp {\n    text-align: center;\n    font-size: 11px;\n    color: #6c757d;\n    padding-top: 15px;\n    border-top: 1px solid #e9ecef;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1060,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "b2e5ba2f40d7cb0e",
        "type": "http request",
        "z": "98179551dc2e0332",
        "name": "Send to C# API",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost:5222/api/reading",
        "tls": "c1c994b464c49ae7",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 740,
        "y": 640,
        "wires": [
            [
                "4fe3957171853005"
            ]
        ]
    },
    {
        "id": "0259ee18bd248b65",
        "type": "function",
        "z": "98179551dc2e0332",
        "name": "Formata para a API",
        "func": "// Recebe os dados processados do sistema\nvar data = msg.payload;\n\n\n\n// Formata os dados para a API C# conforme a estrutura esperada\nvar apiPayload = {\n    \"IdDevice\": data.IdDevice || 2,\n    \"ReadingDatetime\": data.ReadingDatetime,\n    \"LevelPct\": parseFloat(data.LevelPct) || 0,\n    \"TurbidityNtu\": parseFloat(data.TurbidityNtu) || 0,\n    \"PhLevel\": parseFloat(data.PhLevel) || 7.0\n};\n\n// Log para debug\nnode.log(\"Enviando dados para API: \" + JSON.stringify(apiPayload));\n\n// Prepara mensagem para o HTTP request\nmsg.payload = apiPayload;\nmsg.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\"\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 480,
        "wires": [
            [
                "b2e5ba2f40d7cb0e",
                "eff28487c846db17"
            ]
        ]
    },
    {
        "id": "4fe3957171853005",
        "type": "debug",
        "z": "98179551dc2e0332",
        "name": "API Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 640,
        "wires": []
    },
    {
        "id": "ca7f4c610dce27ca",
        "type": "http request",
        "z": "98179551dc2e0332",
        "name": "Teste Conexão API",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "https://localhost:7253/api/reading",
        "tls": "c1c994b464c49ae7",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Accept",
                "keyValue": "",
                "valueType": "other",
                "valueValue": "application/json"
            }
        ],
        "x": 270,
        "y": 540,
        "wires": [
            [
                "13fdd8832f1446d5"
            ]
        ]
    },
    {
        "id": "13fdd8832f1446d5",
        "type": "debug",
        "z": "98179551dc2e0332",
        "name": "API Teste Resposta",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 640,
        "wires": []
    },
    {
        "id": "b8903dc1cfc90bf4",
        "type": "inject",
        "z": "98179551dc2e0332",
        "name": "Teste API",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 440,
        "wires": [
            [
                "ca7f4c610dce27ca"
            ]
        ]
    },
    {
        "id": "eff28487c846db17",
        "type": "debug",
        "z": "98179551dc2e0332",
        "name": "API Format",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 480,
        "wires": []
    }
]